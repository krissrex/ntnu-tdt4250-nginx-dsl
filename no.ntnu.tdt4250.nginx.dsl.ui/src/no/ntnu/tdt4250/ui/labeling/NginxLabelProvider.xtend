/*
 * generated by Xtext 2.18.0.M3
 */
package no.ntnu.tdt4250.ui.labeling

import com.google.inject.Inject
import no.ntnu.tdt4250.nginx.Nginx
import no.ntnu.tdt4250.nginx.Site
import no.ntnu.tdt4250.nginx.SslCert
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class NginxLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}

	def text(SslCert ele) {
		'SSL: ' + ele.sslCert
	}
	
	def text(Nginx ele) {
		'Nginx config for ' + ele.sites.length + ' site' + (ele.sites.length !== 1 ? 's' : '')
	}
	
	def text(Site ele) {
		var name = ele.name
		val isDefault = ele.name == 'default'
		if (isDefault && !ele.alternativeNames.empty) {
			name = ele.alternativeNames.get(0)
		}
		
		return name + (isDefault ? ' (default)' : '')
	}
}
