[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/emf/2002/Ecore', '/no.ntnu.tdt4250.nginx.dsl/model/generated/Nginx.ecore')]


[template public generateNginxConfig(config : Nginx)]
[comment @main/]
[file ('nginx.conf', false, 'UTF-8')]
	[for (site: Site | config.sites)]
# --------------------------------
# [site.name/]
# --------------------------------
server {
	server_name [servernames(site)/];


	[if (isHttpsRedirect(site))]
	# SSL configuration
	listen ['['/]::[']'/]:443 ssl http2 ipv6only=on;
	listen 443 ssl http2; 
	
	ssl_certificate /etc/cloudflare/qore.no/certificate.pem;
	ssl_certificate_key /etc/cloudflare/qore.no/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
	[else]
    listen 80;
    listen ['['/]::[']'/]:80;
	[/if]

	[if (hasRoot(site))]
	root [site.root/];

	location / {
		try_files $uri $uri/ =404;
	}

	location ~ /\.ht {
		deny all;
	}
	
	error_page 404 /404.html;
	location = /404.html {
		root [site.root/];
		internal;
	}
	
	error_page 500 502 503 504 /50x.html;
	location = /50x.html {
		root [site.root/];
		internal;
	}
	[/if]

	
}

# if https redirect
[ssl_redirect(site)/]

	[/for]
[/file]
[/template]


[template public ssl_redirect(site: Site)]
server {
	if ($host = [site.name/]) {
		return 301 https://$host$request_uri;
	}

	server_name [site.name/];

	listen 80;
	listen ['['/]::[']'/]:80;
	return 404; # managed by Certbot
}
[/template]


[template public php(site: Site)]

index index.php index.html index.htm index.nginx-debian.html;

location ~ \.php$ {
	include snippets/fastcgi-php.conf;
	fastcgi_pass unix:/run/php/php7.2-fpm.sock;
}

[/template]


[template public servernames(site: Site)]
[site.name/] [for (domain: String | site.alternativeNames)]domain[/for]
[/template]

[query public isHttpsRedirect(site : Site) : EBoolean = site.httpsRedirect = 'true' /]

[query public hasRoot(site : Site) : EBoolean = site.root.size() <> 0 /]
