[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/emf/2002/Ecore', '/no.ntnu.tdt4250.nginx.dsl/model/generated/Nginx.ecore')]


[template public generateNginxConfig(config : Nginx)]
[comment @main/]
[for (site: Site | config.sites)]
	[file (site.name.concat('.conf'), false, 'UTF-8')]
# --------------------------------
# GENERATED [site.name/]
# --------------------------------
server {
	[servernames(site)/]
	[if (site.sslCert <> null and isHttpsRedirect(site))]
	# SSL configuration
	listen ['['/]::[']'/]:443 ssl http2 ipv6only=on;
	listen 443 ssl http2;
 
	[/if]
	[certificates(site)/]	
	[if (hasRoot(site))]
	root [site.root/];

	location / {
		try_files $uri $uri/ =404;
	}

	location ~ /\.ht {
		deny all;
	}

	[error_pages(site)/]
	[/if]	
}

# if https redirect
[ssl_redirect(site)/]
	[/file]
[/for]
[/template]


[template public ssl_redirect(site: Site)]
server {
	if ($host = [site.name/]) {
		return 301 https://$host$request_uri;
	}

	server_name [site.name/];

	listen 80;
	listen ['['/]::[']'/]:80;
	return 404; # managed by Certbot
}
[/template]

[template public certificates(site: Site)]
[if (site.sslCert <> null)]
ssl_certificate [site.sslCert.sslCert/];
ssl_certificate_key [site.sslCert.sslCertKey/];
include /etc/letsencrypt/options-ssl-nginx.conf;
ssl_dhparam [site.sslCert.dhParam/];
[/if]
[/template]


[template public php(site: Site)]

index index.php index.html index.htm index.nginx-debian.html;

location ~ \.php$ {
	include snippets/fastcgi-php.conf;
	fastcgi_pass unix:/run/php/php7.2-fpm.sock;
}

[/template]


[template public servernames(site: Site)]
# sitename
server_name: [site.name/];
[for (alternative: String | site.alternativeNames)]
server_name: [alternative/];
[/for]
[/template]

[template public error_pages(site: Site)]
# error pages
[for (errorPage: ErrorPage | site.errorPage)]
error_page [for (err: Integer | errorPage.httpCodes)][err/] [/for][errorPage.uri/];
location = [errorPage.uri/] {
	root [site.root/];
	internal;
}

[/for]

[/template]

[query public isHttpsRedirect(site : Site) : EBoolean = site.httpsRedirect = 'true' /]

[query public hasRoot(site : Site) : EBoolean = site.root <> null and site.root.size() <> 0 /]
